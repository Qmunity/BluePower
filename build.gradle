buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'OpenComputers'
        url = "http://maven.cil.li/"
    }
    maven {
        name = "ic2"
        url = "http://maven.ic2.player.to/"
    }
    maven {
        name = "Qmunity"
        url = "http://maven.bluepowermod.com/"
    }
}

apply plugin: 'forge'
apply plugin: 'maven'

project.ext {
    major = "0"
    minor = "2"
    if (System.getenv().BUILD_NUMBER != null) {
        build = System.getenv().BUILD_NUMBER
    } else {
        build = "-custom"
    }
    mcVersion = "1.7.10"
}


version = "${project.ext.major}.${project.minor}.${project.build}"
group = "com.bluepowermod"
archivesBaseName = "BluePower"

dependencies {
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.105:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.2.29:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.2.64:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.1.0.311:dev"
    compile "mcp.mobius.waila:Waila:1.5.7a_1.7.10"
    compile "li.cil.oc:OpenComputers:MC1.7.10-1.4.2.16:api"
    compile 'net.industrial-craft:industrialcraft-2:2.2.658-experimental:api'
    compile "qmunity:QmunityLib:0.1.69:deobf"
}

minecraft {
    version = "${project.ext.mcVersion}-10.13.2.1236"
    runDir = "eclipse/assets"

    // replacing stuff in the source
    replace '@MAJOR@', project.major
    replace '@MINOR@', project.minor
    replace '@MC_VERSION@', version
    replace '@BUILD_NUMBER@', project.build

}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include '*.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }

            //This makes sure that it gets run EVERY time
            outputs.upToDateWhen {false}
        }


jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        appendix = "${project.ext.mcVersion}"
        classifier = "deobf"
    }
}

// add a source jar
task sourceJar(type: Jar) {
    from (sourceSets.main.allSource) {
        appendix = "${project.ext.mcVersion}"
        classifier = "sources"
    }
}

// add a javadoc jar
task javadocZip(type: Zip, dependsOn: javadoc) {
    appendix = "${project.ext.mcVersion}"
    classifier = "javadoc"
    from 'build/docs/javadoc'
}

// Create API library zip
task apiZip(type: Zip) {
    from(sourceSets.main.java) {
        include 'com/bluepowermod/api/**'
        appendix = "${project.ext.mcVersion}"
        classifier = "api"
    }
}

apiZip.mustRunAfter deobfJar

artifacts {
    archives sourceJar
    archives deobfJar
    archives javadocZip
    archives apiZip
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + System.getenv("local_maven"))
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'BluePower'
                    url 'https://github.com/Qmunity/BluePower'
                    scm {
                        url 'https://github.com/Qmunity/BluePower'
                        connection 'scm:git:git@github.com:Qmunity/BluePower.git'
                        developerConnection 'scm:git:git@github.com:Qmunity/BluePower.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/Qmunity/BluePower/issues'
                    }
                    licenses {
                        license {
                            name 'GPLv3'
                            url 'https://github.com/Qmunity/BluePower/blob/master/LICENCE.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'MineMaarten'
                            name 'MineMaarten'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Amadornes'
                            name 'Amadornes'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Quetzi'
                            name 'Quetzi'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'K4Unl'
                            name 'K4Unl'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Zness'
                            name 'Zness'
                            roles { role 'artist' }
                        }
                    }
                }
            }
        }
    }
}
