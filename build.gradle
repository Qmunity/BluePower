buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'



apply plugin: 'maven'

project.ext {
    major = "0"
    minor = "3"
    if (System.getenv("CI_PIPELINE_IID") != null) {
        build = System.getenv("CI_PIPELINE_IID")
    } else {
        build = "-custom"
    }
    mcVersion = "1.12.2"
}

version = "${project.ext.major}.${project.minor}.${project.build}"
group = "com.bluepowermod"
archivesBaseName = "BluePower"

minecraft {
    version = "${project.ext.mcVersion}-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20180717"

    // replacing stuff in the source
    replace '@MAJOR@', project.major
    replace '@MINOR@', project.minor
    replace '@MC_VERSION@', version
    replace '@BUILD_NUMBER@', project.build

}

repositories {
    maven {
        name "Hwyla"
        url "http://tehnut.info/maven"
    }
    maven {
        name "OpenComputers"
        url "http://maven.cil.li"
    }
    maven {
        name "IC2"
        url "http://maven.ic2.player.to"
    }
    maven {
        url "http://modmaven.k-4u.nl"
    }
    maven {
        name "JEI"
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name 'MCMultipart'
        url 'https://maven.amadornes.com/'
    }
    maven {
        name 'CTM'
        url 'https://maven.tterrag.com/'
    }
}

dependencies {
    deobfProvided "li.cil.oc:OpenComputers:MC1.12.2-1.7.4.153:api"
    compile "net.industrial-craft:industrialcraft-2:2.8.99-ex112:api"
	deobfProvided "MCMultiPart2:MCMultiPart:2.5.3"
    deobfProvided "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
	deobfProvided "mezz.jei:jei_1.12.2:4.9.2.196:api"
	runtime "mezz.jei:jei_1.12.2:4.9.2.196"
    compile "team.chisel.ctm:CTM:MC1.12.2-0.3.3.22"
}



processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include '*.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }

            //This makes sure that it gets run EVERY time
            outputs.upToDateWhen {false}
        }


jar {
    appendix = "${project.ext.mcVersion}"
    classifier = "universal"
}

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        appendix = "${project.ext.mcVersion}"
        classifier = "deobf"
    }
}

// Create API library zip
task apiZip(type: Zip) {
    from(sourceSets.main.java) {
        include 'com/bluepowermod/api/**'
        appendix = "${project.ext.mcVersion}"
        classifier = "api"
    }
}

apiZip.mustRunAfter deobfJar

artifacts {
    archives sourceJar
    archives deobfJar
    archives apiZip
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://" + System.getenv("local_maven"))
            pom {
                groupId = project.group
                version = project.version
                artifactId = project.archivesBaseName
                project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'BluePower'
                    url 'https://github.com/Qmunity/BluePower'
                    scm {
                        url 'https://github.com/Qmunity/BluePower'
                        connection 'scm:git:git@github.com:Qmunity/BluePower.git'
                        developerConnection 'scm:git:git@github.com:Qmunity/BluePower.git'
                    }
                    issueManagement {
                        system 'github'
                        url 'https://github.com/Qmunity/BluePower/issues'
                    }
                    licenses {
                        license {
                            name 'GPLv3'
                            url 'https://github.com/Qmunity/BluePower/blob/master/LICENCE.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'MineMaarten'
                            name 'MineMaarten'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Amadornes'
                            name 'Amadornes'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Quetzi'
                            name 'Quetzi'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'K4Unl'
                            name 'K4Unl'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'MoreThanHidden'
                            name 'MoreThanHidden'
                            roles { role 'developer' }
                        }
                        developer {
                            id 'Zness'
                            name 'Zness'
                            roles { role 'artist' }
                        }
                    }
                }
            }
        }
    }
}
